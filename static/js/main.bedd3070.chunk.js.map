{"version":3,"sources":["home.js","admin.js","username.js","login.js","update.js","result.js","components/navbar.js","serviceWorker.js","index.js"],"names":["Home","className","React","Component","Admin","props","handleNewUserChange","event","setState","newUser","target","value","handleRemoveUserChange","checked","state","removedUsers","push","name","i","length","splice","handleNewUserSubmit","preventDefault","fetch","localStorage","getItem","method","headers","body","JSON","stringify","form","then","response","json","data","console","log","catch","error","users","isChecked","handleRemoveUserSubmit","filter","user","includes","map","checkboxes","this","Fragment","id","type","onChange","for","onSubmit","Username","handleNameChange","handleSubmit","submitted","to","Login","handleCheckChange","newObj","mcChoices","handleTextChange","shortResponse","mcQuestion","shortQuestion","Object","keys","choice","Update","handleAgendaChange","agenda","split","handleAttendanceChange","slice","attendance","handleUpdatesChange","updates","handleTodoChange","todo","submitmsg","Result","msg","Navbar","href","path","Boolean","window","location","hostname","match","setItem","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bedd3070.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <header className=\"home-header\">\r\n          <h1>\r\n            welcome to social cybersecurity!\r\n          </h1>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nclass Admin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      newUser: \"\",\r\n      removedUsers: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${localStorage.getItem('ip')}/admin_page`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n                      users: (data['users']).map(\r\n                        name => ({name: name, isChecked: false})\r\n                      )\r\n                    }));\r\n  }\r\n\r\n  handleNewUserChange = event => {\r\n    this.setState({newUser: event.target.value});\r\n  }\r\n\r\n  handleRemoveUserChange = event => {\r\n    const target = event.target;\r\n    if (target.checked) {\r\n      this.state.removedUsers.push(target.name);\r\n    }\r\n    else {\r\n      for (var i = 0; i < this.state.removedUsers.length; i++) {\r\n        if (this.state.removedUsers[i] == target.name) {\r\n          this.state.removedUsers.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleNewUserSubmit = event => {\r\n    event.preventDefault();\r\n  \tfetch(`${localStorage.getItem('ip')}/admin_page`, {\r\n  \t\tmethod: 'POST',\r\n  \t\theaders: {\r\n  \t\t\t'Content-Type': 'application/json',\r\n  \t\t},\r\n  \t\tbody: JSON.stringify({form: 'newUser', newUser: this.state.newUser}),\r\n  \t})\r\n  \t.then(response => response.json())\r\n  \t.then(data => {console.log('Success:', data);})\r\n  \t.catch((error) => {console.error('Error:', error);});\r\n    this.setState({users: [...this.state.users, {name: this.state.newUser, isChecked: false}],\r\n                   newUser: \"\"});\r\n  }\r\n\r\n  handleRemoveUserSubmit = event => {\r\n    event.preventDefault();\r\n    fetch(`${localStorage.getItem('ip')}/admin_page`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({form: 'removeUsers', removedUsers: this.state.removedUsers}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {console.log('Success:', data);})\r\n    .catch((error) => {console.error('Error:', error);});\r\n    this.setState({users: this.state.users.filter(user => !this.state.removedUsers.includes(user.name)),\r\n                   removedUsers: []});\r\n  }\r\n\r\n  render() {\r\n  \tconst checkboxes = this.state.users.map(user =>\r\n  \t\t(<React.Fragment>\r\n  \t\t\t<input name={user.name} id={user.name} type=\"checkbox\" onChange={this.handleRemoveUserChange} />\r\n  \t\t\t<label for={user.name}> {user.name} </label> <br/>\r\n  \t\t</React.Fragment>));\r\n\r\n    return (\r\n      <div className=\"Admin\">\r\n        <header className=\"admin-header\">\r\n          <h3>\r\n            this is the admin only page!\r\n          </h3>\r\n          <h4>\r\n            ---register a new user---\r\n          </h4>\r\n          <form onSubmit={this.handleNewUserSubmit}>\r\n            <label>enter username of new user:</label><br/>\r\n            <input\r\n              name=\"new\"\r\n              type=\"text\"\r\n              value={this.state.newUser}\r\n              onChange={this.handleNewUserChange} /><br/><br/>\r\n            <input type=\"submit\" value=\"Register\" />\r\n          </form>\r\n          <h4>\r\n            ---remove users---\r\n          </h4>\r\n          <form onSubmit={this.handleRemoveUserSubmit}>\r\n      \t\t\t<p>current users:</p>\r\n      \t\t\t{checkboxes}<br/>\r\n            <input type=\"submit\" value=\"Remove\" />\r\n      \t\t</form>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nclass Username extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      submitted: false\r\n    }\r\n  }\r\n\r\n  handleNameChange = event => {\r\n    this.setState({name: event.target.value});\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    fetch(`${localStorage.getItem('ip')}/username`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({'name': this.state.name}),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {console.log('Success:', data);\r\n                   this.setState({submitted: true});})\r\n    .catch((error) => {console.error('Error:', error);});\r\n  }\r\n\r\n  render() {\r\n    if (this.state.submitted) {\r\n      return (<Redirect to='/socialcybersecurity/login-questions' />);\r\n    }\r\n\r\n    return (\r\n      <div className=\"Username\">\r\n        <header className=\"username-header\">\r\n          <h3>\r\n            hello!\r\n          </h3>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label>enter your username</label><br/>\r\n            <input\r\n              name=\"name\"\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              onChange={this.handleNameChange} /><br/><br/>\r\n            <input type=\"submit\" value=\"Continue\" />\r\n          </form>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Username;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      mcQuestion: \"\",\r\n      mcChoices: {},\r\n      shortQuestion: \"\",\r\n      shortResponse: \"\",\r\n      submitted: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${localStorage.getItem('ip')}/login_data`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({name: data['name'],\r\n                     mcQuestion: data['mcQuestion'],\r\n  \t\t\t\t\t\t\t\t   mcChoices: data['mcChoices'],\r\n  \t\t\t\t\t\t\t\t   shortQuestion: data['shortQuestion']}));\r\n  }\r\n\r\n  handleCheckChange = event => {\r\n    const target = event.target;\r\n    const newObj = {...this.state.mcChoices, [target.name]: target.checked};\r\n    this.setState({mcChoices: newObj});\r\n  }\r\n\r\n  handleTextChange = event => {\r\n    this.setState({shortResponse: event.target.value});\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n  \tfetch(`${localStorage.getItem('ip')}/login_data`, {\r\n  \t\tmethod: 'POST',\r\n  \t\theaders: {\r\n  \t\t\t'Content-Type': 'application/json',\r\n  \t\t},\r\n  \t\tbody: JSON.stringify(this.state),\r\n  \t})\r\n  \t.then(response => response.json())\r\n  \t.then(data => {console.log('Success:', data);\r\n                   this.setState({submitted: true});})\r\n  \t.catch((error) => {console.error('Error:', error);});\r\n  }\r\n\r\n  render() {\r\n  \tif (this.state.submitted) {\r\n  \t\treturn (<Redirect to='/socialcybersecurity/result' />);\r\n  \t}\r\n  \t\r\n  \tconst checkboxes = Object.keys(this.state.mcChoices).map(choice =>\r\n  \t\t(<React.Fragment>\r\n  \t\t\t<input name={choice} id={choice} type=\"checkbox\" onChange={this.handleCheckChange} />\r\n  \t\t\t<label for={choice}> {choice} </label> <br/>\r\n  \t\t</React.Fragment>));\r\n\r\n    return (\r\n      <div className=\"Login\">\r\n        <header className=\"login-header\">\r\n          <h3>\r\n            hello, {this.state.name}!\r\n          </h3>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <p>{this.state.mcQuestion}</p>\r\n            {checkboxes}<br/>\r\n            <label>{this.state.shortQuestion}</label><br/>\r\n            <input\r\n              name=\"short\"\r\n              type=\"text\"\r\n              value={this.state.shortResponse}\r\n              onChange={this.handleTextChange} /><br/><br/>\r\n            <input type=\"submit\" value=\"Submit\" />\r\n          </form>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nclass Update extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      agenda: [],\r\n      submitted: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${localStorage.getItem('ip')}/notes`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n                      users: (data['users']).map(\r\n                        name => ({name: name, attendance: false, updates: [], todo: []})\r\n                      )\r\n                    }));\r\n  }\r\n\r\n  handleAgendaChange = event => {\r\n    this.setState({agenda: event.target.value.split('\\n')});\r\n  }\r\n\r\n  handleAttendanceChange = event => {\r\n    const target = event.target;\r\n    const name = target.name.slice(0, -4);\r\n    for (var i = 0; i < this.state.users.length; i++) {\r\n  \t  if (this.state.users[i].name == name) {\r\n  \t  \tvar newObj = this.state.users[i];\r\n  \t    this.state.users.splice(i, 1);\r\n  \t    if (target.checked) {\r\n  \t      newObj.attendance = true;\r\n  \t    }\r\n  \t    else {\r\n  \t      newObj.attendance = false;\r\n  \t    }\r\n  \t    this.state.users.splice(i, 0, newObj);\r\n  \t  }\r\n  \t}\r\n  }\r\n\r\n  handleUpdatesChange = event => {\r\n    const target = event.target;\r\n    const name = target.name.slice(0, -8);\r\n    const updates = target.value.split('\\n');\r\n    for (var i = 0; i < this.state.users.length; i++) {\r\n  \t  if (this.state.users[i].name == name) {\r\n  \t  \tvar newObj = this.state.users[i];\r\n  \t    this.state.users.splice(i, 1);\r\n  \t    newObj.updates = updates;\r\n  \t    this.state.users.splice(i, 0, newObj);\r\n  \t  }\r\n  \t}\r\n  }\r\n\r\n  handleTodoChange = event => {\r\n    const target = event.target;\r\n    const name = target.name.slice(0, -5);\r\n    const todo = target.value.split('\\n');\r\n    for (var i = 0; i < this.state.users.length; i++) {\r\n  \t  if (this.state.users[i].name == name) {\r\n  \t  \tvar newObj = this.state.users[i];\r\n  \t    this.state.users.splice(i, 1);\r\n  \t    newObj.todo = todo;\r\n  \t    this.state.users.splice(i, 0, newObj);\r\n  \t  }\r\n  \t}\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n  \tfetch(`${localStorage.getItem('ip')}/notes`, {\r\n  \t\tmethod: 'POST',\r\n  \t\theaders: {\r\n  \t\t\t'Content-Type': 'application/json',\r\n  \t\t},\r\n  \t\tbody: JSON.stringify(this.state),\r\n  \t})\r\n  \t.then(response => response.json())\r\n  \t.then(data => {console.log('Success:', data);\r\n                   this.setState({submitted: true});})\r\n  \t.catch((error) => {console.error('Error:', error);});\r\n  }\r\n\r\n  render() {\r\n    var submitmsg\r\n    if (this.state.submitted) {\r\n      submitmsg = \"submission successful\";\r\n    }\r\n    else {\r\n      submitmsg = \"\";\r\n    }\r\n\r\n  \tconst attendance = this.state.users.map(user =>\r\n  \t\t(<React.Fragment>\r\n  \t\t\t<input name={user.name + \"-att\"} id={user.name + \"-att\"} type=\"checkbox\" onChange={this.handleAttendanceChange} />\r\n  \t\t\t<label for={user.name + \"-att\"}> {user.name} </label> <br/>\r\n  \t\t</React.Fragment>));\r\n\r\n  \tconst updates = this.state.users.map(user =>\r\n  \t\t(<React.Fragment>\r\n  \t\t\t<label for={user.name + \"-updates\"}> {user.name} updates: </label> <br/>\r\n  \t\t\t<textarea name={user.name + \"-updates\"} id={user.name + \"-updates\"} onChange={this.handleUpdatesChange} /><br/>\r\n  \t\t</React.Fragment>));\r\n\r\n  \tconst todo = this.state.users.map(user =>\r\n  \t\t(<React.Fragment>\r\n  \t\t\t<label for={user.name + \"-todo\"}> {user.name} to-do: </label> <br/>\r\n  \t\t\t<textarea name={user.name + \"-todo\"} id={user.name + \"-todo\"} onChange={this.handleTodoChange} /><br/>\r\n  \t\t</React.Fragment>));\r\n\r\n    return (\r\n      <div className=\"Update\">\r\n        <header className=\"update-header\">\r\n          <h3>\r\n            update meeting notes\r\n          </h3>\r\n          <p>\r\n            {submitmsg}\r\n          </p>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <h4>Attendance</h4>\r\n            {attendance}<br/>\r\n            <label for=\"agenda\">Agenda:</label><br/>\r\n            <textarea\r\n              name=\"agenda\"\r\n              id=\"agenda\"\r\n              onChange={this.handleAgendaChange} /><br/>\r\n            <h4>Updates</h4>\r\n            {updates}<br/>\r\n            <h4>To-do</h4>\r\n            {todo}<br/><br/>\r\n            <input type=\"submit\" value=\"Submit\" />\r\n          </form>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Update;\r\n","import React from 'react';\r\n\r\nclass Result extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      msg: \"error: no message\"\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${localStorage.getItem('ip')}/result`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({msg: data['msg']}));\r\n  }\r\n\r\n  render() {\r\n\treturn (\r\n\t  <div className=\"Result\">\r\n\t    <header className=\"result-header\">\r\n\t      <h1>\r\n\t        {this.state.msg}\r\n\t      </h1>\r\n\t    </header>\r\n\t  </div>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport Home from './../home';\r\nimport Admin from './../admin';\r\nimport Username from './../username';\r\nimport Login from './../login';\r\nimport Update from './../update';\r\nimport Result from './../result';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <nav>\r\n            <h3><a href=\"/\">Home</a></h3>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/socialcybersecurity\">Social Cybersecurity Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/socialcybersecurity/admin\">Admin Only</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/socialcybersecurity/login\">Login</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/socialcybersecurity/update\">Update Notes</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <Switch>\r\n            <Route path=\"/socialcybersecurity/admin\">\r\n              <Admin />\r\n            </Route>\r\n            <Route path=\"/socialcybersecurity/login\">\r\n              <Username />\r\n            </Route>\r\n            <Route path=\"/socialcybersecurity/login-questions\">\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/socialcybersecurity/update\">\r\n              <Update />\r\n            </Route>\r\n            <Route path=\"/socialcybersecurity/result\">\r\n              <Result />\r\n            </Route>\r\n            <Route path=\"/socialcybersecurity\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Navbar from './components/navbar';\nimport * as serviceWorker from './serviceWorker';\n\nlocalStorage.setItem('ip', 'http://127.0.0.1:5000');\n// localStorage.setItem('ip', 'http://35.221.40.171:8080');\n\nReactDOM.render(\n    <Navbar />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}